services:
  streamlit-app:
    build:
      context: .
      dockerfile: Dockerfile.streamlit # we build each time we run docker compose
    ports:
      - 8501:8501
    env_file:
      - .env
    volumes:
      - ./src/chatbot_ui:/app/src/chatbot_ui # app is defined in Dockerfile as working dir; real time sync, no rebuild is needed
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant # we won't build, but pull the latest image & run it
    ports:
      - 6333:6333 # api (more universal, easier to debug, and works everywhere (including browsers))
      - 6334:6334 # grpc (is faster, more efficient, and great for internal microservices)
    volumes:
      - ./qdrant_storage:/qdrant/storage:z # data will persist in both local and container, even if container is stopped
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    ports:
      - 8000:8000
    env_file:
      - .env
    volumes:
      - ./src/api:/app/src/api
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    ports:
      - 5433:5432
    environment:
      POSTGRES_DB: langgraph_db
      POSTGRES_USER: langgraph_user
      POSTGRES_PASSWORD: langgraph_password
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: unless-stopped
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh